"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.

Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

ф-ции min() и sort() не исп-ем!
"""


# 1 Сложность такого алгоритма: O(n^2) - квадратичная.

# O(1) + O(n) x O(n) x O(1) + O(1) + O(1) = O(n ** 2)
def search_min_in_list(a):
    m = a[0]                       # O(1)
    for i in a:                    # O(n)
        for j in a:                # O(n)
            if j >= i and i < m:   # O(1)
                m = i              # O(1)
    return m                       # O(1)


print(search_min_in_list([1, 2, 5, 3, 8]))


# 2 Сложность такого алгоритма: O(n) - линейная.

# O(1) + O(n) x O(1) + O(1) + O(1) = O(n)
def search_min_in_list_second(a):
    m = a[0]          # O(1)
    for i in a:       # O(n)
        if m > i:     # O(1)
            m = i     # O(1)
    return m          # O(1)


print(search_min_in_list_second([1, 2, 5, 3, 8]))
